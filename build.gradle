buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'




group = "morph.avaritia" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Avaritia"

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

repositories {
	maven {
		name 'CB Maven'
		url "http://chickenbones.net/maven/"
	}
    maven {
        name = "JEI"
        url = "http://dvs1.progwml6.com/files/maven"
    }
	maven {
		name = "Jared"
		url = "http://maven.blamejared.com/"
	}
}

dependencies {
    /*HARD DEPENDENCIES*/
    compile "codechicken:CodeChickenLib:${config.mc_version}-${config.ccl_version}:deobf"

    /*SOFT DEPENDENCIES*/
    compile "mezz.jei:jei_${config.mc_version}:${config.jei_version}"
	compile "CraftTweaker2:CraftTweaker2-API:${config.craft_tweaker_version}"
	compile "CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-${config.craft_tweaker_version}"

	/*OTHERS*/
    //compile "com.wayoftime.bloodmagic:BloodMagic:${config.mc_version}-${config.blood_magic_version}"
    //compile "slimeknights:TConstruct:${config.mc_version}-${config.tinkers_version}"
    //compile "slimeknights.mantle:Mantle:${config.mc_version}-${config.mantle_version}"
    //compile "mcjty.theoneprobe:TheOneProbe:1.1x-${config.top_version}"
    //compile "net.sengir.forestry:forestry_${config.mc_version}:${config.forestry_version}"
    //compile "com.brandon3055.draconicevolution:Draconic-Evolution:${config.mc_version}-${config.de_version}:deobf"
}

targetCompatibility = "1.8"
sourceCompatibility = "1.8"

version = "${project.config.mod_version}." + (System.getenv("BUILD_NUMBER") ?: "1")

println config.mc_version + "-" + config.forge_version
// Setup the forge minecraft plugin data. Specify the preferred forge/minecraft version here
minecraft {
    version = config.mc_version + "-" + config.forge_version
    mappings = config.mappings
	replace '${mod_version}', project.config.mod_version
    runDir = "run"
    makeObfSourceJar = false
}

processResources {
    inputs.property "version", project.version
    inputs.property "mc_version", project.config.mc_version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mc_version': project.config.mc_version
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

version = "${project.minecraft.version}-${project.version}"
def commonManifest = {
    attributes 'FMLAT': 'avaritia_at.cfg'
}

jar {
    classifier = 'universal'
    manifest commonManifest
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest commonManifest
}

task srcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
    manifest commonManifest
}

// Tell the artifact system about our extra jars
artifacts {
    archives deobfJar
    archives srcJar
}

// Configure an upload task.
uploadArchives {
    repositories {
        mavenDeployer {
            if (project.hasProperty("local_maven")) {
                repository(url: "file://${local_maven}")
                pom {
                    groupId = project.group
                    // Force the maven upload to use the <mcversion>-<version> syntax preferred at files
                    artifactId = project.archivesBaseName
                    project {
                        name project.archivesBaseName
                        packaging 'jar'
                        description 'Avaritia'
                        url 'https://github.com/Morpheus1101/Avaritia'

                        scm {
                            url 'https://github.com/Morpheus1101/Avaritia'
                            connection 'scm:git:git://github.com/Morpheus1101/Avaritia.git'
                            developerConnection 'scm:git:git@github.com:Morpheus1101/Avaritia.git'
                        }

                        issueManagement {
                            system 'github'
                            url 'https://github.com/Morpheus1101/Avaritia/issues'
                        }

                        licenses {
                            license {
                                name 'MIT'
                                url 'https://opensource.org/licenses/MIT'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id 'Morpheus1101'
                                name 'Morpheus1101'
                                roles {
                                    role 'developer'
                                }
                            }
                            developer {
                                id 'covers1624'
                                name 'covers1624'
                                roles {
                                    role 'developer'
                                }
                            }
                            developer {
                                id 'brandon3055'
                                name 'brandon3055'
                                roles {
                                    role 'developer'
                                }
                            }
                            developer {
                                id 'SpitefulFox'
                                name 'SpitefulFox'
                                roles {
                                    role 'Retired-Developer'
                                }
                            }
                            developer {
                                id 'TTFTCUTS'
                                name 'TTFTCUTS'
                                roles {
                                    role 'Retired-Developer'
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
